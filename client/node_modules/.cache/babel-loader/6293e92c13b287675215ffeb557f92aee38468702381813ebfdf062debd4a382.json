{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect } from 'react';\nexport default function TopTracks(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n    clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n    redirectUri: \"http://localhost:3000\"\n  });\n  useEffect(() => {\n    if (!accessToken) {\n      return;\n    } else {\n      spotifyApi.setAccessToken(accessToken);\n      spotifyApi.getMyTopTracks().then(data => {\n        let topTracks = data.body.items;\n        console.log(topTracks);\n      }, err => {\n        console.log(\"Something went wrong!\", err);\n      });\n    }\n  }, [accessToken]);\n}\n_s(TopTracks, \"hvBvEjRIMqUn83+ZIINmdgt3Wlo=\", false, function () {\n  return [useAuth];\n});\n_c = TopTracks;\nvar _c;\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"names":["React","useAuth","SpotifyWebApi","useState","useEffect","TopTracks","_ref","_s","code","accessToken","spotifyApi","clientId","clientSecret","redirectUri","setAccessToken","getMyTopTracks","then","data","topTracks","body","items","console","log","err","_c","$RefreshReg$"],"sources":["/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopTracks.js"],"sourcesContent":["import React from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect } from 'react';\n\nexport default function TopTracks({ code }) {\n    const accessToken = useAuth(code);\n\n    const spotifyApi = new SpotifyWebApi({\n        clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n        clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n        redirectUri: \"http://localhost:3000\"\n    });\n\n    useEffect(() => {\n        if (!accessToken) {\n            return;\n        } else {\n            spotifyApi.setAccessToken(accessToken);\n            spotifyApi.getMyTopTracks().then(data => {\n                let topTracks = data.body.items;\n                console.log(topTracks);\n            }, err => {\n                console.log(\"Something went wrong!\", err);\n            });\n        }\n    }, [accessToken]);\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACtC,MAAMG,WAAW,GAAGR,OAAO,CAACO,IAAI,CAAC;EAEjC,MAAME,UAAU,GAAG,IAAIR,aAAa,CAAC;IACjCS,QAAQ,EAAE,kCAAkC;IAC5CC,YAAY,EAAE,kCAAkC;IAChDC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACZ,IAAI,CAACK,WAAW,EAAE;MACd;IACJ,CAAC,MAAM;MACHC,UAAU,CAACI,cAAc,CAACL,WAAW,CAAC;MACtCC,UAAU,CAACK,cAAc,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;QACrC,IAAIC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK;QAC/BC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;MAC1B,CAAC,EAAEK,GAAG,IAAI;QACNF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,GAAG,CAAC;MAC7C,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACd,WAAW,CAAC,CAAC;AACrB;AAACF,EAAA,CAtBuBF,SAAS;EAAA,QACTJ,OAAO;AAAA;AAAAuB,EAAA,GADPnB,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}