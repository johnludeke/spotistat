{"ast":null,"code":"var _jsxFileName = \"/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopTracks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect, useLocation } from 'react';\nimport TrackCard from './cards/TrackCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopTracks() {\n  _s();\n  const location = useLocation();\n  const {\n    accessToken\n  } = location.state;\n  const [topTracks, setTopTracks] = useState([]);\n  console.log(topTracks);\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n    clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n    redirectUri: \"http://localhost:3000\"\n  });\n  useEffect(() => {\n    if (!accessToken) {\n      return;\n    } else {\n      spotifyApi.setAccessToken(accessToken);\n      spotifyApi.getMyTopTracks().then(data => {\n        let items = data.body.items;\n        items.length = 10;\n        console.log(items);\n        setTopTracks(items.map(track => {\n          return {\n            id: track.id,\n            artist: track.artists[0].name,\n            title: track.name,\n            albumImageUrl: track.album.images[0].url\n          };\n        }));\n      }, err => {\n        console.log(\"Something went wrong!\", err);\n      });\n    }\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), topTracks.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n      artist: track.artist,\n      title: track.title,\n      albumImageUrl: track.albumImageUrl\n    }, track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(TopTracks, \"JoRDk/i6j+61r/9VH8MfXRa0Dqw=\", false, function () {\n  return [useLocation];\n});\n_c = TopTracks;\nvar _c;\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"names":["React","SpotifyWebApi","useState","useEffect","useLocation","TrackCard","jsxDEV","_jsxDEV","TopTracks","_s","location","accessToken","state","topTracks","setTopTracks","console","log","spotifyApi","clientId","clientSecret","redirectUri","setAccessToken","getMyTopTracks","then","data","items","body","length","map","track","id","artist","artists","name","title","albumImageUrl","album","images","url","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopTracks.js"],"sourcesContent":["import React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect, useLocation } from 'react';\nimport TrackCard from './cards/TrackCard';\n\nexport default function TopTracks() {\n    const location = useLocation();\n    const { accessToken } = location.state;\n\n    const [topTracks, setTopTracks] = useState([]);\n    console.log(topTracks);\n\n    const spotifyApi = new SpotifyWebApi({\n        clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n        clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n        redirectUri: \"http://localhost:3000\"\n    });\n\n    useEffect(() => {\n        if (!accessToken) {\n            return;\n        } else {\n            spotifyApi.setAccessToken(accessToken);\n            spotifyApi.getMyTopTracks().then(data => {\n                let items = data.body.items;\n                items.length = 10;\n                console.log(items);\n                setTopTracks(items.map(track => {\n                    return {\n                        id: track.id,\n                        artist: track.artists[0].name,\n                        title: track.name,\n                        albumImageUrl: track.album.images[0].url\n                    }\n                }));\n            }, err => {\n                console.log(\"Something went wrong!\", err);\n            });\n        }\n    }, [accessToken]);\n\n    return (\n        <div>\n            <h1>Top Tracks</h1>\n            {topTracks.map(track => (\n                <TrackCard\n                    key={track.id}\n                    artist={track.artist}\n                    title={track.title}\n                    albumImageUrl={track.albumImageUrl}\n                />\n            ))}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAY,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAEtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9Ca,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EAEtB,MAAMI,UAAU,GAAG,IAAIhB,aAAa,CAAC;IACjCiB,QAAQ,EAAE,kCAAkC;IAC5CC,YAAY,EAAE,kCAAkC;IAChDC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,WAAW,EAAE;MACd;IACJ,CAAC,MAAM;MACHM,UAAU,CAACI,cAAc,CAACV,WAAW,CAAC;MACtCM,UAAU,CAACK,cAAc,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;QACrC,IAAIC,KAAK,GAAGD,IAAI,CAACE,IAAI,CAACD,KAAK;QAC3BA,KAAK,CAACE,MAAM,GAAG,EAAE;QACjBZ,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;QAClBX,YAAY,CAACW,KAAK,CAACG,GAAG,CAACC,KAAK,IAAI;UAC5B,OAAO;YACHC,EAAE,EAAED,KAAK,CAACC,EAAE;YACZC,MAAM,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;YAC7BC,KAAK,EAAEL,KAAK,CAACI,IAAI;YACjBE,aAAa,EAAEN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC;UACzC,CAAC;QACL,CAAC,CAAC,CAAC;MACP,CAAC,EAAEC,GAAG,IAAI;QACNxB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEuB,GAAG,CAAC;MAC7C,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAC5B,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAAiC,QAAA,gBACIjC,OAAA;MAAAiC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClB/B,SAAS,CAACe,GAAG,CAACC,KAAK,iBAChBtB,OAAA,CAACF,SAAS;MAEN0B,MAAM,EAAEF,KAAK,CAACE,MAAO;MACrBG,KAAK,EAAEL,KAAK,CAACK,KAAM;MACnBC,aAAa,EAAEN,KAAK,CAACM;IAAc,GAH9BN,KAAK,CAACC,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACnC,EAAA,CAjDuBD,SAAS;EAAA,QACZJ,WAAW;AAAA;AAAAyC,EAAA,GADRrC,SAAS;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}