{"ast":null,"code":"var _jsxFileName = \"/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopTracks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopTracks(_ref) {\n  _s();\n  let {\n    accessToken\n  } = _ref;\n  const [topTracks, setTopTracks] = useState([]);\n  console.log(topTracks);\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n    clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n    redirectUri: \"http://localhost:3000\"\n  });\n  useEffect(() => {\n    if (!accessToken) {\n      return;\n    } else {\n      spotifyApi.setAccessToken(accessToken);\n      spotifyApi.getMyTopTracks().then(data => {\n        console.log(data.body.items);\n        setTopTracks(data.body.items.map(track => {\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            albumImageUrl: track.album.images[1].url\n          };\n        }));\n      }, err => {\n        console.log(\"Something went wrong!\", err);\n      });\n    }\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), topTracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Artist: \", track.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Title: \", track.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: track.albumImageUrl,\n        alt: \"Album cover not available.\",\n        width: \"100\",\n        height: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(TopTracks, \"lc0lFEXh3OzYXA9KaNtp4gIhkiQ=\");\n_c = TopTracks;\nvar _c;\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"names":["React","useAuth","SpotifyWebApi","useState","useEffect","jsxDEV","_jsxDEV","TopTracks","_ref","_s","accessToken","topTracks","setTopTracks","console","log","spotifyApi","clientId","clientSecret","redirectUri","setAccessToken","getMyTopTracks","then","data","body","items","map","track","artist","artists","name","title","albumImageUrl","album","images","url","err","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopTracks.js"],"sourcesContent":["import React from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect } from 'react';\n\nexport default function TopTracks({ accessToken }) {\n\n    const [topTracks, setTopTracks] = useState([]);\n    console.log(topTracks);\n\n    const spotifyApi = new SpotifyWebApi({\n        clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n        clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n        redirectUri: \"http://localhost:3000\"\n    });\n\n    useEffect(() => {\n        if (!accessToken) {\n            return;\n        } else {\n            spotifyApi.setAccessToken(accessToken);\n            spotifyApi.getMyTopTracks().then(data => {\n                console.log(data.body.items);\n                setTopTracks(data.body.items.map(track => {\n                    return {\n                        artist: track.artists[0].name,\n                        title: track.name,\n                        albumImageUrl: track.album.images[1].url\n                    }\n                }));\n            }, err => {\n                console.log(\"Something went wrong!\", err);\n            });\n        }\n    }, [accessToken]);\n\n    return (\n        <div>\n            <h1>Top Tracks</h1>\n            {topTracks.map(track => (\n                <div>\n                    <h3>Artist: {track.artist}</h3>\n                    <h3>Title: {track.title}</h3>\n                    <img src={track.albumImageUrl} alt=\"Album cover not available.\" width=\"100\" height=\"100\" />\n                </div>\n            ))}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAE7C,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9CU,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EAEtB,MAAMI,UAAU,GAAG,IAAIb,aAAa,CAAC;IACjCc,QAAQ,EAAE,kCAAkC;IAC5CC,YAAY,EAAE,kCAAkC;IAChDC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACZ,IAAI,CAACM,WAAW,EAAE;MACd;IACJ,CAAC,MAAM;MACHK,UAAU,CAACI,cAAc,CAACT,WAAW,CAAC;MACtCK,UAAU,CAACK,cAAc,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;QACrCT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC;QAC5BZ,YAAY,CAACU,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,KAAK,IAAI;UACtC,OAAO;YACHC,MAAM,EAAED,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;YAC7BC,KAAK,EAAEJ,KAAK,CAACG,IAAI;YACjBE,aAAa,EAAEL,KAAK,CAACM,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC;UACzC,CAAC;QACL,CAAC,CAAC,CAAC;MACP,CAAC,EAAEC,GAAG,IAAI;QACNtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEqB,GAAG,CAAC;MAC7C,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACzB,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClB7B,SAAS,CAACc,GAAG,CAACC,KAAK,iBAChBpB,OAAA;MAAA8B,QAAA,gBACI9B,OAAA;QAAA8B,QAAA,GAAI,UAAQ,EAACV,KAAK,CAACC,MAAM;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/BlC,OAAA;QAAA8B,QAAA,GAAI,SAAO,EAACV,KAAK,CAACI,KAAK;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BlC,OAAA;QAAKmC,GAAG,EAAEf,KAAK,CAACK,aAAc;QAACW,GAAG,EAAC,4BAA4B;QAACC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC/B,EAAA,CA3CuBF,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}