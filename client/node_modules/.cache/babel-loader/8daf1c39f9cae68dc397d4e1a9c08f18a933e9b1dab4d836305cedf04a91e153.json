{"ast":null,"code":"var _jsxFileName = \"/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopTracks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect } from 'react';\nimport TrackCard from './cards/TrackCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopTracks(_ref) {\n  _s();\n  let {\n    spotifyApi\n  } = _ref;\n  const [topTracks, setTopTracks] = useState([]);\n  console.log(topTracks);\n\n  // const spotifyApi = new SpotifyWebApi({\n  //     clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n  //     clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n  //     redirectUri: \"http://localhost:3000\"\n  // });\n\n  spotifyApi.getMyTopTracks().then(data => {\n    console.log(data.body.items);\n    setTopTracks(data.body.items.map(track => {\n      return {\n        id: track.id,\n        artist: track.artists[0].name,\n        title: track.name,\n        albumImageUrl: track.album.images[0].url\n      };\n    }));\n  }, err => {\n    console.log(\"Something went wrong!\", err);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), topTracks.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n      artist: track.artist,\n      title: track.title,\n      albumImageUrl: track.albumImageUrl\n    }, track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(TopTracks, \"b/ET6jrM13jdUsbADuvIEYS2qSQ=\");\n_c = TopTracks;\nvar _c;\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"names":["React","SpotifyWebApi","useState","useEffect","TrackCard","jsxDEV","_jsxDEV","TopTracks","_ref","_s","spotifyApi","topTracks","setTopTracks","console","log","getMyTopTracks","then","data","body","items","map","track","id","artist","artists","name","title","albumImageUrl","album","images","url","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopTracks.js"],"sourcesContent":["import React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect } from 'react';\nimport TrackCard from './cards/TrackCard';\n\nexport default function TopTracks({ spotifyApi }) {\n\n    const [topTracks, setTopTracks] = useState([]);\n    console.log(topTracks);\n\n    // const spotifyApi = new SpotifyWebApi({\n    //     clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n    //     clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n    //     redirectUri: \"http://localhost:3000\"\n    // });\n\n    spotifyApi.getMyTopTracks().then(data => {\n        console.log(data.body.items);\n        setTopTracks(data.body.items.map(track => {\n            return {\n                id: track.id,\n                artist: track.artists[0].name,\n                title: track.name,\n                albumImageUrl: track.album.images[0].url\n            }\n        }));\n    }, err => {\n        console.log(\"Something went wrong!\", err);\n    });\n\n    return (\n        <div>\n            <h1>Top Tracks</h1>\n            {topTracks.map(track => (\n                <TrackCard\n                    key={track.id}\n                    artist={track.artist}\n                    title={track.title}\n                    albumImageUrl={track.albumImageUrl}\n                />\n            ))}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAE5C,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9CW,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;;EAEtB;EACA;EACA;EACA;EACA;;EAEAD,UAAU,CAACK,cAAc,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;IACrCJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC;IAC5BP,YAAY,CAACK,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,KAAK,IAAI;MACtC,OAAO;QACHC,EAAE,EAAED,KAAK,CAACC,EAAE;QACZC,MAAM,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;QAC7BC,KAAK,EAAEL,KAAK,CAACI,IAAI;QACjBE,aAAa,EAAEN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC;MACzC,CAAC;IACL,CAAC,CAAC,CAAC;EACP,CAAC,EAAEC,GAAG,IAAI;IACNlB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEiB,GAAG,CAAC;EAC7C,CAAC,CAAC;EAEF,oBACIzB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBzB,SAAS,CAACS,GAAG,CAACC,KAAK,iBAChBf,OAAA,CAACF,SAAS;MAENmB,MAAM,EAAEF,KAAK,CAACE,MAAO;MACrBG,KAAK,EAAEL,KAAK,CAACK,KAAM;MACnBC,aAAa,EAAEN,KAAK,CAACM;IAAc,GAH9BN,KAAK,CAACC,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC3B,EAAA,CAtCuBF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}