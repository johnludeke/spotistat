{"ast":null,"code":"var _jsxFileName = \"/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopArtists.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect, useLocation } from 'react';\nimport ArtistCard from './cards/ArtistCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopArtists() {\n  _s();\n  const location = useLocation();\n  const {\n    accessToken\n  } = location.state;\n  const [topArtists, setTopArtists] = useState([]);\n  console.log(topArtists);\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n    clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n    redirectUri: \"http://localhost:3000\"\n  });\n  useEffect(() => {\n    if (!accessToken) {\n      return;\n    } else {\n      spotifyApi.setAccessToken(accessToken);\n      spotifyApi.getMyTopArtists().then(data => {\n        let items = data.body.items;\n        items.length = 10;\n        console.log(items);\n        setTopArtists(items.map(artist => {\n          return {\n            id: artist.id,\n            name: artist.name,\n            genre: artist.genres[0],\n            profilePictureUrl: artist.images[0].url\n          };\n        }));\n      }, err => {\n        console.log(\"Something went wrong!\", err);\n      });\n    }\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), topArtists.map(artist => /*#__PURE__*/_jsxDEV(ArtistCard, {\n      name: artist.name,\n      genre: artist.genre,\n      profilePictureUrl: artist.profilePictureUrl\n    }, artist.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(TopArtists, \"wAAzLWbnMRJjhYOSK3TJajI0XQw=\", false, function () {\n  return [useLocation];\n});\n_c = TopArtists;\nvar _c;\n$RefreshReg$(_c, \"TopArtists\");","map":{"version":3,"names":["React","SpotifyWebApi","useState","useEffect","useLocation","ArtistCard","jsxDEV","_jsxDEV","TopArtists","_s","location","accessToken","state","topArtists","setTopArtists","console","log","spotifyApi","clientId","clientSecret","redirectUri","setAccessToken","getMyTopArtists","then","data","items","body","length","map","artist","id","name","genre","genres","profilePictureUrl","images","url","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/johnludeke/MAIN/CODING/spotistat/client/src/pages/TopArtists.js"],"sourcesContent":["import React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { useState, useEffect, useLocation } from 'react';\nimport ArtistCard from './cards/ArtistCard';\n\nexport default function TopArtists() {\n    const location = useLocation();\n    const { accessToken } = location.state;\n\n    const [topArtists, setTopArtists] = useState([]);\n    console.log(topArtists);\n\n    const spotifyApi = new SpotifyWebApi({\n        clientId: \"f1873ac026914cb6831c47fc00432b3e\",\n        clientSecret: \"d48679c7e5b54de09d997515538f7913\",\n        redirectUri: \"http://localhost:3000\"\n    });\n\n    useEffect(() => {\n        if (!accessToken) {\n            return;\n        } else {\n            spotifyApi.setAccessToken(accessToken);\n            spotifyApi.getMyTopArtists().then(data => {\n                let items = data.body.items;\n                items.length = 10;\n                console.log(items);\n                setTopArtists(items.map(artist => {\n                    return {\n                        id: artist.id,\n                        name: artist.name,\n                        genre: artist.genres[0],\n                        profilePictureUrl: artist.images[0].url\n                    }\n                }))\n            }, err => {\n                console.log(\"Something went wrong!\", err);\n            });\n        }\n    }, [accessToken]);\n\n    return (\n        <div>\n            <h1>Top Artists</h1>\n            {topArtists.map(artist => (\n                <ArtistCard\n                    key={artist.id}\n                    name={artist.name}\n                    genre={artist.genre}\n                    profilePictureUrl={artist.profilePictureUrl}\n                />\n            ))}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAY,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAEtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChDa,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,UAAU,GAAG,IAAIhB,aAAa,CAAC;IACjCiB,QAAQ,EAAE,kCAAkC;IAC5CC,YAAY,EAAE,kCAAkC;IAChDC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,WAAW,EAAE;MACd;IACJ,CAAC,MAAM;MACHM,UAAU,CAACI,cAAc,CAACV,WAAW,CAAC;MACtCM,UAAU,CAACK,eAAe,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;QACtC,IAAIC,KAAK,GAAGD,IAAI,CAACE,IAAI,CAACD,KAAK;QAC3BA,KAAK,CAACE,MAAM,GAAG,EAAE;QACjBZ,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;QAClBX,aAAa,CAACW,KAAK,CAACG,GAAG,CAACC,MAAM,IAAI;UAC9B,OAAO;YACHC,EAAE,EAAED,MAAM,CAACC,EAAE;YACbC,IAAI,EAAEF,MAAM,CAACE,IAAI;YACjBC,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC;YACvBC,iBAAiB,EAAEL,MAAM,CAACM,MAAM,CAAC,CAAC,CAAC,CAACC;UACxC,CAAC;QACL,CAAC,CAAC,CAAC;MACP,CAAC,EAAEC,GAAG,IAAI;QACNtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEqB,GAAG,CAAC;MAC7C,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAC1B,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAA+B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB7B,UAAU,CAACe,GAAG,CAACC,MAAM,iBAClBtB,OAAA,CAACF,UAAU;MAEP0B,IAAI,EAAEF,MAAM,CAACE,IAAK;MAClBC,KAAK,EAAEH,MAAM,CAACG,KAAM;MACpBE,iBAAiB,EAAEL,MAAM,CAACK;IAAkB,GAHvCL,MAAM,CAACC,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjC,EAAA,CAjDuBD,UAAU;EAAA,QACbJ,WAAW;AAAA;AAAAuC,EAAA,GADRnC,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}